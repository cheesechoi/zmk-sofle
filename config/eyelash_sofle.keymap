#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt { flavor = "tap-preferred"; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        VscodeTerminal {
            bindings = <&kp LC(GRAVE)>;
            key-positions = <53 0>;
            layers = <0>;
        };

        SwitchSameApp {
            bindings = <&kp LG(GRAVE)>;
            key-positions = <55 0>;
            layers = <0>;
        };
    };

    macros {
        stop_right: stopall {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_4 &kp RIGHT_ARROW &kp ENTER>;
            label = "STOPALL";
        };

        curse_left: curseall {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_5 &kp LEFT_ARROW &kp ENTER>;
            label = "CURSEALL";
        };

        hell: hell {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp Q>;

            label = "HELL";
            tap-ms = <101>;
        };

        stop_left: stop_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_4 &kp LEFT &kp ENTER>;
            label = "STOP_LEFT";
        };

        curse_right: curse_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_5 &kp RIGHT &kp ENTER>;
            label = "CURSE_RIGHT";
        };

        protect_self: protect_self {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp K &kp HOME &kp ENTER>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp L &kp ENTER>;

            label = "PROTECT_SELF";
            tap-ms = <101>;
        };

        heal: heal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_1 &kp HOME &kp ENTER>;
            label = "HEAL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&mt GRAVE ESC  &kp N1              &kp N2          &kp N3              &kp N4            &kp N5       &kp UP_ARROW     &kp N6   &kp N7             &kp N8           &kp N9           &kp N0                  &kp BACKSPACE
&kp TAB        &kp Q               &kp W           &kp E               &kp R             &kp T        &kp DOWN_ARROW   &kp Y    &kp U              &kp I            &kp O            &kp P                   &kp BSLH
&kp CAPS       &mt LEFT_CONTROL A  &mt LEFT_ALT S  &mt LEFT_COMMAND D  &mt LEFT_SHIFT F  &kp G        &kp LEFT_ARROW   &kp H    &mt RIGHT_SHIFT J  &mt RIGHT_GUI K  &mt RIGHT_ALT L  &mt RIGHT_CONTROL SEMI  &kp APOS
&kp LSHFT      &kp Z               &kp X           &kp C               &kp V             &kp B        &kp RIGHT_ARROW  &kp N    &kp M              &kp COMMA        &kp DOT          &kp FSLH                &kp RSHFT
&kp C_MUTE     &kp LCTRL           &kp LALT        &kp LGUI            &mo 1             &kp SPACE    &kp ENTER        &kp RET  &mo 2              &kp RSHFT        &trans           &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1  &kp F2    &kp F3    &kp F4     &kp F5    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8                    &kp F9  &kp F10           &trans
&trans      &trans  &trans    &kp UP    &trans     &trans    &mmv MOVE_DOWN   &trans  &kp N7  &kp N8                    &kp N9  &kp MINUS         &kp EQUAL
&trans      &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans    &mmv MOVE_LEFT   &trans  &kp N4  &kp N5                    &kp N6  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &trans  &trans    &trans    &trans     &trans    &mmv MOVE_RIGHT  &trans  &kp N1  &kp N2                    &kp N3  &kp F12           &trans
&kp C_MUTE  &trans  &trans    &trans    &trans     &trans    &mkp LCLK        &trans  &tog 3  &mt RIGHT_SHIFT NUMBER_0  &trans  &kp DOT
            >;

            display-name = "LAYER1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &trans  &trans                   &trans     &trans                   &trans    &mmv MOVE_UP     &trans                          &trans                       &trans                &trans                         &trans  &trans
&trans     &trans  &trans                   &kp PG_UP  &trans                   &trans    &mmv MOVE_DOWN   &mt TILDE GRAVE                 &kp LEFT_PARENTHESIS         &kp PLUS              &kp RIGHT_PARENTHESIS          &trans  &trans
&trans     &trans  &mt HOME LA(LEFT_ARROW)  &kp PG_DN  &mt END LA(RIGHT_ARROW)  &trans    &mmv MOVE_LEFT   &mt DOUBLE_QUOTES SINGLE_QUOTE  &mt LEFT_BRACE LEFT_BRACKET  &mt UNDERSCORE MINUS  &mt RIGHT_BRACE RIGHT_BRACKET  &trans  &trans
&trans     &trans  &trans                   &trans     &trans                   &trans    &mmv MOVE_RIGHT  &trans                          &kp LESS_THAN                &kp EQUAL             &kp GREATER_THAN               &trans  &trans
&trans     &trans  &trans                   &trans     &tog 3                   &trans    &mkp LCLK        &trans                          &trans                       &kp RIGHT_SHIFT       &trans                         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "LAYER2";
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans         &trans    &trans     &trans       &trans  &trans      &trans       &trans       &trans         &trans  &trans
&trans  &trans  &kp C_AC_HOME  &kp UP    &trans     &trans       &trans  &trans      &trans       &trans       &protect_self  &trans  &trans
&trans  &trans  &kp LEFT       &kp DOWN  &kp RIGHT  &trans       &trans  &stop_left  &stop_right  &curse_left  &curse_right   &trans  &trans
&trans  &trans  &trans         &trans    &trans     &trans       &trans  &hell       &kp N1       &kp N2       &kp N3         &trans  &trans
&trans  &trans  &trans         &trans    &tog 3     &kp SPACE    &trans  &kp RET     &tog 3       &kp N0       &trans         &trans
            >;
        };
    };
};
